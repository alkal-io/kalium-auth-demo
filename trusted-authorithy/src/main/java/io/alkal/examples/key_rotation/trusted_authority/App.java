package io.alkal.examples.key_rotation.trusted_authority;

import com.google.gson.Gson;
import io.alkal.kalium.Kalium;
import io.alkal.kalium.kafka.KaliumKafkaQueueAdapter;

import java.security.NoSuchAlgorithmException;
import java.util.Map;

import static spark.Spark.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {


    public static void main(String[] args) throws Exception {

        Kalium kalium = Kalium.Builder().setQueueAdapter(new KaliumKafkaQueueAdapter("localhost:9092")).build();
        kalium.start();
        KeyRotator keyRotator = new KeyRotator(kalium);
        keyRotator.start();
        port(9000);
        post("/issueSignedToken", "application/json", (request, response) -> {
            Map<String, String> claims = new Gson().fromJson(request.body(), Map.class);
            String signedJwt = TokenIssuer.issue(claims, keyRotator.getPrivateKey());

            return signedJwt;
        });

    }
}
